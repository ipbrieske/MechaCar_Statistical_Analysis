x <- 10
name <- "Mohan"
inClass2 <- T
# NO such thng as a list in R
# In R we have Vectors
friends <- c("Ryan", "Anu")
print(friends[1])
View(friends)
# Part I
students <- c()
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
# Call the function with the student vector as an argument.
print(students)
# Part I
students <- c()
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
# Call the function with the student vector as an argument.
roll_call
# Part I
students <- c()
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
# Call the function with the student vector as an argument.
roll_call(students)
# Part I
students <- c()
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
# Call the function with the student vector as an argument.
roll_call(students)
install.packages("dplyr")
# Part I
students <- c()
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
# Call the function with the student vector as an argument.
roll_call(students)
# Part I
students <- c()
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
# Call the function with the student vector as an argument.
roll_call(students)
# Part II
locker_combinations <- function(class){
# Create the for loop and print the student name and locker combination.
for (x in students) {
print(x)
}
# Part I
students <- c("John", "Steve", "Alice", "Ben", "Kyle", "Billy", "Shakira", "Beyonce")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
# Call the function with the student vector as an argument.
roll_call(students)
# Part II
locker_combinations <- function(class){
# Create the for loop and print the student name and locker combination.
for (x in students) {
print(x)
}
}
# Part II
locker_combinations <- function(class){
# Create the for loop and print the student name and locker combination.
for (x in students) {
print(x)
}
}
roll_call(students)
# Part I
students <- c("John", "Steve", "Alice", "Ben", "Kyle", "Billy", "Shakira", "Beyonce")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
}
install.packages("ggplot2")
setwd("C:/Users/IPBri/OneDrive/Desktop/DataClass/R_Analysis/MechaCar_Statistical_Analysis")
?read.csv()
# Import Library
library(dplyr)
# build dataframe
mc_mpg <- read.csv(file="MechaCar_mpg.csv")
View(mc_mpg)
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
lm(mpg ~ vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, AWD, data=mc_mpg)
lm(mpg ~ vehicle_length, vehicle_weight, spoiler_angle, AWD, data=mc_mpg)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mc_mpg)
# Perform linear regression using lm()
mpg_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mc_mpg)
summary(mpg_lm)
total_summary <- summarize(data="Suspension_Coil.csv")
total_summary <- summarize("Suspension_Coil.csv")
# Build summary dataframe from Susupension Coil csv
suspension_coil <- read.csv(file="Suspension_Coil.csv")
total_summary <- summarize(suspension_coil)
View(total_summary)
View(suspension_coil)
?aov()
?summarize()
# Build summary dataframe from Susupension Coil csv
suspension_coil <- read.csv(file="Suspension_Coil.csv")
total_summary <- suspension_coild %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
total_summary <- suspension_coil %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(total_summary)
lot_summary <-suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(lot_summary)
?t.test()
t.test(suspension_coil$PSI, mean(suspension_coil$PSI))
t.test(suspension_coil$PSI)
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
t.test(suspension_coil$PSI)
t.test(suspension_coil$PSI, subset(Manufacturing_Lot == 'Lot1'))
t.test(suspension_coil$PSI, subset(suspension_coil, Manufacturing_Lot == 'Lot1'))
lot1 <- subset(suspension_coil,Manufacturing_Lot == 'Lot1')
View(lot1)
t.test(suspension_coil$PSI, lot1$PSI)
t.test(suspension_coil$PSI)
lot1 <- subset(suspension_coil,Manufacturing_Lot == 'Lot1')
t.test(suspension_coil$PSI, lot1$PSI)
lot2 <- subset(suspension_coil,Manufacturing_Lot == 'Lot2')
t.test(suspension_coil$PSI, lot2$PSI)
lot3 <- subset(suspension_coil,Manufacturing_Lot == 'Lot3')
t.test(suspension_coil$PSI, lot3$PSI)
t.test(suspension_coil$PSI, lot_summary$Mean)
t.test(lot_summary$Mean, lot1$PSI)
t.test(lot_summary$Mean, lot2$PSI)
t.test(lot_summary$Mean, lot3$PSI)
t.test(lot_summary$Mean, lot3$PSI)
t.test(lot_summary$Mean, lot3$PSI)
t.test(lot_summary$Mean, lot3$PSI)
t.test(lot_summary$Mean, lot3$PSI)
# Perform a t-test of each manufacturing lot vs the total lot
t.test(suspension_coil$PSI, lot_summary$Mean)
lot1 <- subset(suspension_coil,Manufacturing_Lot == 'Lot1')
t.test(lot_summary$Mean, lot1$PSI)
lot2 <- subset(suspension_coil,Manufacturing_Lot == 'Lot2')
t.test(lot_summary$Mean, lot2$PSI)
lot3 <- subset(suspension_coil,Manufacturing_Lot == 'Lot3')
t.test(lot_summary$Mean, lot3$PSI)
summary(mpg_lm)
# Import Library
library(dplyr)
# build dataframe
mc_mpg <- read.csv(file="MechaCar_mpg.csv")
# Perform linear regression using lm()
mpg_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mc_mpg)
summary(mpg_lm)
# Build summary dataframe from Susupension Coil csv
suspension_coil <- read.csv(file="Suspension_Coil.csv")
total_summary <- suspension_coil %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
lot_summary <-suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
# Perform a t-test of each manufacturing lot vs the total lot
t.test(suspension_coil$PSI, lot_summary$Mean)
lot1 <- subset(suspension_coil,Manufacturing_Lot == 'Lot1')
t.test(lot_summary$Mean, lot1$PSI)
lot2 <- subset(suspension_coil,Manufacturing_Lot == 'Lot2')
t.test(lot_summary$Mean, lot2$PSI)
lot3 <- subset(suspension_coil,Manufacturing_Lot == 'Lot3')
t.test(lot_summary$Mean, lot3$PSI)
